#!/usr/bin/env python

from __future__ import print_function, division

import os, sys
import numpy as np

from desitarget import io
from desitarget.brightmask import make_bright_star_mask, get_mask_dir

#import warnings
#warnings.simplefilter('error')

import multiprocessing
nproc = multiprocessing.cpu_count() // 4

from desiutil.log import get_logger
log = get_logger()

from argparse import ArgumentParser
ap = ArgumentParser()
ap.add_argument("--maskdir",
                help='Output directory to which to write mask [defaults to the $MASK_DIR environment variable]')
ap.add_argument("--maglim",
                help="Magnitude limit for building the mask [defaults to 12]",
                default=12)
ap.add_argument("--matchrad",
                help="Tycho stars are discarded if they match a Gaia star at this radius",
                default=12)
ap.add_argument("--numproc", type=int,
                help="number of concurrent processes to use [{}]".format(nproc),
                default=nproc)
ap.add_argument("--maskepoch",
                help="Stars are shifted (by just proper motion) to this epoch to make the mask [2023.0]",
                default=2023.)
ap.add_argument("--gaiaepoch",
                help="Epoch of Gaia observations [2015.5]",
                default=2015.)

ns = ap.parse_args()

# ADM if the MASK_DIR directory was passed, set it...
maskdir = ns.maskdir
if maskdir is None:
    # ADM ...otherwise retrieve it from the environment variable.
    maskdir = get_mask_dir()

mask = make_bright_star_mask(maglim=ns.maglim, matchrad=ns.matchrad, numproc=ns.numproc,
                             maskepoch=ns.maskepoch, gaiaepoch=ns.gaiaepoch)

log.info('wrote a file of {} masks to {}'.format(len(mask), ns.maskdir))

